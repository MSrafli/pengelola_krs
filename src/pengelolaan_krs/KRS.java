/*
nama :mochamad surgani rafli
npm  :2110010133
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pengelolaan_krs;

/**
 *
 * @author ASUS
 */
import java.awt.print.PrinterException;
import java.text.MessageFormat;
import javax.swing.JTable;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
public class KRS extends javax.swing.JFrame {

    /**
     * Creates new form KRS
     */
    DefaultTableModel model;
    
    public KRS() {
         initComponents();
    String[] judul = {"Npm", "Nama", "Kelas", "Jurusan", "Dosen", "Semester"};
    model = new DefaultTableModel(judul, 0);
    tabel.setModel(model);
    tampilkan();

    tabel.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tabelMouseClicked(evt);
        }
    });
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        tbtambah = new javax.swing.JButton();
        tbhapus = new javax.swing.JButton();
        tbcari = new javax.swing.JButton();
        tbedit = new javax.swing.JButton();
        tbkeluar = new javax.swing.JButton();
        txtkelas = new javax.swing.JComboBox<>();
        txtdosen = new javax.swing.JComboBox<>();
        txtsem = new javax.swing.JComboBox<>();
        txtjur = new javax.swing.JComboBox<>();
        txtnpm = new javax.swing.JTextField();
        txtnama = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cari = new javax.swing.JTextField();
        prin1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Input KRS"));

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Npm", "Nama", "Kelas", "Jurusan", "Dosen", "Semester"
            }
        ));
        jScrollPane1.setViewportView(tabel);

        tbtambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tambah.png"))); // NOI18N
        tbtambah.setText("Tambah");
        tbtambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtambahActionPerformed(evt);
            }
        });

        tbhapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        tbhapus.setText("Hapus");
        tbhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbhapusActionPerformed(evt);
            }
        });

        tbcari.setText("Cari");
        tbcari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbcariActionPerformed(evt);
            }
        });

        tbedit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edit.png"))); // NOI18N
        tbedit.setText("Edit");
        tbedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbeditActionPerformed(evt);
            }
        });

        tbkeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/9104334_sign out_logout_exit_out_icon.png"))); // NOI18N
        tbkeluar.setText("LOUGOUT");
        tbkeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbkeluarActionPerformed(evt);
            }
        });

        txtkelas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A BJM REG PAGI", "B BJM REG PAGI", "C BJM REG PAGI", "D BJM REG PAGI " }));

        txtdosen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DIMAS", "ANGGA" }));

        txtsem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SEMESTER 1", "SEMESTER 2", "SEMESTER 3", "SEMESTER 4", "SEMESTER 5", "SEMESTER 6", "SEMESTER 7", "SEMESTER 8" }));

        txtjur.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TI", "SI" }));

        jLabel1.setText("NPM");

        jLabel2.setText("NAMA");

        jLabel3.setText("KELAS");

        jLabel4.setText("JURUSAN");

        jLabel5.setText("DOSEN");

        jLabel6.setText("SEMESTER");

        prin1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/prin.png"))); // NOI18N
        prin1.setText("Prin");
        prin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prin1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(tbtambah)
                .addGap(18, 18, 18)
                .addComponent(tbhapus)
                .addGap(18, 18, 18)
                .addComponent(tbedit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(prin1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tbkeluar)
                .addGap(92, 92, 92))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbcari)
                .addGap(29, 29, 29)
                .addComponent(cari)
                .addGap(258, 258, 258))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(77, 77, 77)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtkelas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtnpm, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtnama, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(94, 94, 94)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtjur, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtdosen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtsem, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(140, 140, 140))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(59, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbcari)
                    .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtnpm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(txtjur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtnama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtdosen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtkelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtsem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbtambah)
                    .addComponent(tbhapus)
                    .addComponent(tbedit)
                    .addComponent(tbkeluar)
                    .addComponent(prin1))
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbcariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbcariActionPerformed
     String searchText = cari.getText().trim().toLowerCase();

    if (searchText.isEmpty()) {
        // If the search text is empty, show all data
        tampilkan();
    } else {
        // If there is a search text, filter the table based on the search text
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        tabel.setRowSorter(sorter);

        // Convert the search text to lower case for case-insensitive search
        RowFilter<DefaultTableModel, Object> rowFilter = RowFilter.regexFilter("(?i)" + searchText);
        sorter.setRowFilter(rowFilter);
    }
      // TODO add your handling code here:
    }//GEN-LAST:event_tbcariActionPerformed

    private void tbkeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbkeluarActionPerformed
new menu().setVisible(true);//membuka kembali halaman utama
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_tbkeluarActionPerformed

    private void tbtambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbtambahActionPerformed
 try {
        Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/mahasiswa", "root", "");

        String npm = txtnpm.getText();
        String nama = txtnama.getText();
        String kelas = txtkelas.getSelectedItem().toString();
        String jurusan = txtjur.getSelectedItem().toString();
        String dosen = txtdosen.getSelectedItem().toString();
        String semester = txtsem.getSelectedItem().toString();

        // Sesuaikan nama kolom dan tabel pada query INSERT INTO
        String query = "INSERT INTO krs (Npm, Nama, Kelas, Jurusan, Dosen, Semester) "
                + "VALUES ('" + npm + "', '" + nama + "', '" + kelas + "', '" + jurusan + "', '" + dosen + "', '" + semester + "')";

        Statement stmt = cn.createStatement();
        int hasil = stmt.executeUpdate(query);

        if (hasil > 0) {
            JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan");
            tampilkan(); // Memanggil method tampilkan untuk menampilkan data terbaru
        } else {
            JOptionPane.showMessageDialog(this, "Data gagal ditambahkan");
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        Logger.getLogger(KRS.class.getName()).log(Level.SEVERE, null, ex);
    }
   // TODO add your handling code here:
    }//GEN-LAST:event_tbtambahActionPerformed

    private void tbhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbhapusActionPerformed
    int row = tabel.getSelectedRow();

    if (row == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris data yang akan dihapus");
    } else {
        // Konfirmasi penghapusan
        int confirmResult = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
        
        if (confirmResult == JOptionPane.YES_OPTION) {
            try {
                String npm = tabel.getValueAt(row, 0).toString();

                Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/mahasiswa", "root", "");
                String query = "DELETE FROM krs WHERE Npm = '" + npm + "'";
                Statement stmt = cn.createStatement();
                int hasil = stmt.executeUpdate(query);

                if (hasil > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
                    tampilkan(); // Memanggil method tampilkan untuk menampilkan data terbaru
                } else {
                    JOptionPane.showMessageDialog(this, "Data gagal dihapus");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
                Logger.getLogger(KRS.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
            // TODO add your handling code here:
    }//GEN-LAST:event_tbhapusActionPerformed
private void tabelMouseClicked(java.awt.event.MouseEvent evt) {                                     
    int row = tabel.getSelectedRow();

    if (row != -1) {
        txtnpm.setText(tabel.getValueAt(row, 0).toString());
        txtnama.setText(tabel.getValueAt(row, 1).toString());
        txtkelas.setSelectedItem(tabel.getValueAt(row, 2).toString());
        txtjur.setSelectedItem(tabel.getValueAt(row, 3).toString());
        txtdosen.setSelectedItem(tabel.getValueAt(row, 4).toString());
        txtsem.setSelectedItem(tabel.getValueAt(row, 5).toString());
    }
}

    private void tbeditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbeditActionPerformed
     int row = tabel.getSelectedRow();

    if (row == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris data yang akan diedit");
    } else {
        try {
            String selectedNpm = tabel.getValueAt(row, 0).toString();
            String npm = txtnpm.getText();
            String nama = txtnama.getText();
            String kelas = txtkelas.getSelectedItem().toString();
            String jurusan = txtjur.getSelectedItem().toString();
            String dosen = txtdosen.getSelectedItem().toString();
            String semester = txtsem.getSelectedItem().toString();

            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/mahasiswa", "root", "");
            // Update data berdasarkan NPM yang dipilih
            String query = "UPDATE krs SET Npm = ?, Nama = ?, Kelas = ?, Jurusan = ?, Dosen = ?, Semester = ? WHERE Npm = ?";
            PreparedStatement pstmt = cn.prepareStatement(query);
            pstmt.setString(1, npm);
            pstmt.setString(2, nama);
            pstmt.setString(3, kelas);
            pstmt.setString(4, jurusan);
            pstmt.setString(5, dosen);
            pstmt.setString(6, semester);
            pstmt.setString(7, selectedNpm); // NPM yang lama

            int hasil = pstmt.executeUpdate();

            if (hasil > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil diedit");
                tampilkan(); // Memanggil method tampilkan untuk menampilkan data terbaru
            } else {
                JOptionPane.showMessageDialog(this, "Data gagal diedit");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
            Logger.getLogger(KRS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }        // TODO add your handling code here:
    }//GEN-LAST:event_tbeditActionPerformed

    private void prin1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prin1ActionPerformed
    MessageFormat header = new MessageFormat("Data KRS");
    MessageFormat footer = new MessageFormat("Page {0,number,integer}");

    try {
        boolean completed = tabel.print(JTable.PrintMode.FIT_WIDTH, header, footer, true, null, true, null);

        if (completed) {
            JOptionPane.showMessageDialog(this, "Print berhasil");
        } else {
            JOptionPane.showMessageDialog(this, "Print dibatalkan");
        }
    } catch (PrinterException ex) {
        Logger.getLogger(KRS.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_prin1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KRS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KRS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KRS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KRS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
 java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            KRS frame = new KRS();
            frame.setVisible(true);
            // Add a listener for the search button
            frame.tbcari.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    frame.tbcariActionPerformed(evt);
                }
            });
        }
    });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cari;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton prin1;
    private javax.swing.JTable tabel;
    private javax.swing.JButton tbcari;
    private javax.swing.JButton tbedit;
    private javax.swing.JButton tbhapus;
    private javax.swing.JButton tbkeluar;
    private javax.swing.JButton tbtambah;
    private javax.swing.JComboBox<String> txtdosen;
    private javax.swing.JComboBox<String> txtjur;
    private javax.swing.JComboBox<String> txtkelas;
    private javax.swing.JTextField txtnama;
    private javax.swing.JTextField txtnpm;
    private javax.swing.JComboBox<String> txtsem;
    // End of variables declaration//GEN-END:variables

 private void tampilkan() {
    int row = tabel.getRowCount();
    for (int a = 0; a < row; a++) {
        model.removeRow(0);
    }

    try {
        Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/mahasiswa", "root", "");
        ResultSet rs = cn.createStatement().executeQuery("SELECT * FROM krs");

        while (rs.next()) {
            String data[] = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)};
            model.addRow(data);
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Koneksi ke database gagal: " + ex.getMessage());
        Logger.getLogger(KRS.class.getName()).log(Level.SEVERE, null, ex);
    }
}}
